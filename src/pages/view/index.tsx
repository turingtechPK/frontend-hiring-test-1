
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import Table from '../../Component/Table'
import Pagination from '@/Component/Pagination'
import {  useEffect, useState } from 'react'
import API from '../../config/axios.config'
import { useRouter } from 'next/router'
import MyModal from '@/Component/Modal'
import Logo from "../../assets/TT Logo.png"

const inter = Inter({ subsets: ['latin'] })
const offsetValue = 10

export default function Home() {

  const router = useRouter()

  const [data,setData] = useState([])
  const [modal,setModal] = useState(false)
  const [totalCount, setTotalCount] = useState(0)
  const [modalData, setModalData] = useState()
  const [offSet, setOffset] =  useState(0)
  const [currentPage, setCurrenPage] = useState<number>()

 const onPageChange = (pageNo: number) => {
  setCurrenPage(pageNo)
  const calculatedOffSet =  (offsetValue * pageNo) - 10 
  getData(calculatedOffSet)
  setOffset(calculatedOffSet)
 }

  const getData = async (offSet = 0, limit = 10) => {
try {
   const res = await API.get(`/calls?offset=${offSet}&limit=${limit}`)
   setData(res.data.nodes)
   setTotalCount(res.data.totalCount)
   console.log(res.data.totalCount)
}
   catch (error) {
  if(localStorage.getItem("token")){
    router.reload()
  }else{
    alert("plz refesh page")
  }
   }
  }

  useEffect(() => {
    getData()
  },[])

  const handleRowClick = (id: string) => {
    router.push(`/details/${id}`)
  }

  const onArchiveChange = async (e, id: string) => {
    e.stopPropagation()
    try {
      const res = await API.put(`/calls/${id}/archive`)
      onPageChange(currentPage || 1)
    } catch (error) {
      console.log(error)
    }
 
  }

  const handleLogout = () => {
    localStorage.clear()
    router.replace("/")
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>

      <div className='border-bottom px-3 d-flex align-items-center justify-content-between bg-white' style={{ height: "80px" }}>
      <Image
      src={Logo}
      width={300}
      alt="Picture of the author"
    />
        <button onClick={handleLogout} className='add-btn'style={{ height: "40px" }}>Log out</button>
      </div>

      <div   className='px-3 d-flex align-items-center justify-content-between bg-white ' style={{ height: "100px" }}>
      <h4>Turing Technologies Frontend Test</h4>
      </div>

    <div className='container'>
<Table onRowClick={handleRowClick} handleAcrhive={onArchiveChange} onClickAddNote={(event,item) => {
  event.stopPropagation()
  setModalData(item)
  setModal(true)
} 
}
data={data} 
/>
</div>  


<MyModal setIsOpen={() => setModal(false)} isOpen={modal} data={modalData} />

<div className='d-flex justify-content-center'>

<Pagination onPageChange={onPageChange} totalCount={totalCount} offset={10} />
</div>
       
      </main>
    </>
  )
}


